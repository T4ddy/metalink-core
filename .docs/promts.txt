

"Посчитать количество объектов на тайле (+добавить уже бывшие тут) и принять решение разделять этот тайл на 4 или нет. Решение принимается на основе количества (площадь) и веса в баллах каждого типа объектов. Количество объектов считается не прямо нахождением, а с учетом его зоны влияния. Одно здание может посчитаться в несколько тайлов. Все заафекченные тайлы (грязные) должны пересчитаться на потенциальное дробление. Новые объекты не размазывются при дальнейшем дроблении на 4, а аплаят свой финальный вес после последнего дробления для большей точности. Если было дробление то с каждым циклом количество объектов каждого типа делятся на 4 между новыми тайлами."

это общее описание из дока про генерацию карты

из этого уже реализовано подсчет и размазывание площади пограничных зданий с учетом их радиуса влияния. можешь сам посмотреть в @osm_processor.go, что именно реализовано. теперь нужно реализовать следующий этап (только его, не беги вперед, давай делать степ бай степ).

если в зону попадает здание или его часть нужно делать чистую копию до изменений этой зоны. после полного прохождения по всем зданиям нужно посчитать веса * площадь каждого типа зданий в зоне. важно сначало пройтись полностью по всем билдингам и всем зонам, т.к. билдинг может влиять на несколько зон. после полного цикла прохождений, если трешхолд превышен - пускай это пока будет 10.000 единиц (пока все веса это 1 в конфиге и поэтому 10.000 трешхолд это по факту 10.000 м2) - тогда мы берем сохраненную копию чистой зоны (до текущих изменений, но там могли уже быть объекты до запекания новой информации, до выгрузки из БД), делим эту зону на 4 (так же делим на 4 все площади объектов - равномерно размазываем, т.к. мы не знаем точно где они были) и уже на эти зоны аплаим здания. но тут надо ещё понять, как зацепить соседние зоны на которые частично повлияли пограничные здания. нужно делать какую-то карту зависимостей связанных после аплая новых зданий зон. если зоны 1 и 2 получили пополам пограничное здание то логично при превышении лимита на одной из зон пускать под пересчет все связанные - делить на 4 и аплаить здания.

получается следующий алгоритм:
+ делаем копии до изменений всех полученных по границам из БД зоны
+ аплаим все здания на все выше указанные зоны
+ считаем вес каждой зоны и помечаем зоны которые первысили вес
+ помечаем связанные с ними распределением площадей соседние зоны
+ все помеченные зоны откатываем к чистым копиям
+ делим эти зоны на 4 и делаем их чистые копии до изменений
+ аплаим все билдинги попадающие на эти зоны 


для одного промта это слишком много задач поэтому сейчас мы реализуем ВОТ ЭТИ УКАЗАННЫЕ НИЖЕ:

+ напиши функцию и создай копии всех зон, которые сейчас будут обрабатываться
+ напиши функцию для расчета веса зоны и после её применения создай массив или словарь (как ты думаешь лучше так и делай) слишком тяжелых зон
+ напиши функцию которая будет строить мапу зависимостей зон (когда одно здание размазали на несколько зон)

пока ТОЛЬКО ЭТИ ТРИ штуки давай реализовывать

выноси куски кода логические в функции. не нужно делать огромные простыни





================================================

для начала ОЧЕНЬ ТЩАТЕЛЬНО ПРОСКАНИРУЙ ВЕСЬ ПРОЕКТ для поиска лучше из возможных решений.

================================================

отвечай максимально подробно и полно. пропиши все функции, даже которые повторяются. комментарии в коде на английском, само объяснения вне кода на русском. 

================================================